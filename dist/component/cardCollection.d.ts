import { Collection } from '../core/collection';
import { Knot } from '../core/knot';
import { Objekt } from '../core/objekt';
import { ContentHandler } from './contentHandler';
import { Pager } from './pager';
export declare class CardCollection {
    cardCollectionKnot: Knot;
    ctrl: any;
    options: Objekt;
    collection: Collection<Objekt>;
    query: string;
    pager: Pager;
    contentHandler: ContentHandler;
    body: Knot;
    cardFooterKnot: Knot;
    pagerKnot: Knot;
    cardTemplate: Knot<HTMLTemplateElement>;
    template: string;
    constructor(dom: Knot, opt_selector?: string | undefined, opt_ctrl?: (object | null) | undefined, opt_options?: Object | undefined);
    private _setOptions;
    private _init;
    private _initContentHandler;
    private _initStructure;
    private _initTemplate;
    private _getCardKnot;
    refresh(opt_page?: number | undefined): void;
    eventAction(params: Objekt): void;
    eventCardKnot(cardKnot: Knot, item: Objekt): void;
    private _addCard;
    setData(items: Array<any>): void;
    setCount(count: number): void;
    private _getItems;
    private _draw;
    render(): void;
}
