import { BaseField } from './baseField';
import { Popup } from '../component/popup';
import { Collection } from '../core/collection';
import { Knot } from '../core/knot';
import { Objekt } from '../core/objekt';
export declare class SelectField extends BaseField<HTMLInputElement> {
    query: string;
    ids: string[];
    containerKnot: Knot;
    listKnot: Knot;
    popup: Popup;
    options: Collection<Objekt>;
    iconKnot: Knot;
    selectContainerKnot: Knot;
    selectKnot: Knot;
    searchInputKnot: Knot<HTMLInputElement>;
    constructor(input: Knot<HTMLInputElement>, label: Knot, error: Knot, inputBlock: Knot);
    private _init;
    isMultiple(): boolean;
    private _initPopup;
    private _initChangeEvent;
    private _initOptions;
    render(): void;
    refresh(): void;
    setValue(value: Object | Function | Array<any> | boolean | number | string | null | undefined): void;
    getValue(): any;
    getOptionValue(opt_attribute?: string): any;
    showLoader(): void;
    private _hideLoader;
    setOptions(items: Array<Objekt>, opt_value?: string | undefined, opt_name?: string | undefined, opt_image?: string | undefined): void;
    private _change;
    private _setSelectTags;
    private _setSimpleTag;
    private _setMultipleTag;
    private _setTags;
    private _setSelectedIds;
    private _getSelectedIds;
    private _handleSelectedId;
    private _drawKnots;
    private _drawSearchInput;
    open(): void;
    close(): void;
    private _search;
}
