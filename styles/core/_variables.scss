@use 'sass:list';
@use 'sass:map';
@use 'sass:math';
@use 'sass:string';
@use 'colors';

// Variables

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;

    @each $key, $num in $map {
        @if $prev-num == null {
            // Do nothing
        } @else if not math.compatible($prev-num, $num) {
            @warn 'Potentially invalid value for #{$map-name}: This map must be in ascending order, but key `#{$key}` has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key `#{$prev-key}` !';
        } @else if $prev-num >= $num {
            @warn 'Invalid value for #{$map-name}: This map must be in ascending order, but key `#{$key}` has value #{$num} which isn`t greater than #{$prev-num}, the value of the previous key `#{$prev-key}` !';
        }

        $prev-key: $key;
        $prev-num: $num;
    }
}

// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
    $index: string.index($string, $search);

    @if $index {
        @return string.slice($string, 1, $index - 1) + $replace +
            str-replace(
                string.slice($string, $index + string.length($search)),
                $search,
                $replace
            );
    }

    @return $string;
}

@mixin _assert-starts-at-zero($map) {
    $values: map.values($map);
    $first-value: list.nth($values, 1);

    @if $first-value != 0 {
        @warn 'First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.';
    }
}

// Options
//
// Quickly modify global styling by enabling or disabling optional settings.

$enable-grid-classes: true !default;

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacer-x: $spacer !default;
$spacer-y: $spacer !default;
$spacers: (
    0: (
        x: 0,
        y: 0,
    ),
    1: (
        x: (
            $spacer-x * 0.25,
        ),
        y: (
            $spacer-y * 0.25,
        ),
    ),
    2: (
        x: (
            $spacer-x * 0.5,
        ),
        y: (
            $spacer-y * 0.5,
        ),
    ),
    3: (
        x: $spacer-x,
        y: $spacer-y,
    ),
    4: (
        x: (
            $spacer-x * 1.5,
        ),
        y: (
            $spacer-y * 1.5,
        ),
    ),
    5: (
        x: (
            $spacer-x * 3,
        ),
        y: (
            $spacer-y * 3,
        ),
    ),
) !default;
$border-width: 1px !default;

// Body
//
// Settings for the `<body>` element.

$body-bg: colors.$white !default;
$body-color: colors.$light-grey !default;

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
) !default;
@include _assert-ascending($grid-breakpoints, '$grid-breakpoints');
@include _assert-starts-at-zero($grid-breakpoints);

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
) !default;
@include _assert-ascending($container-max-widths, '$container-max-widths');

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns: 12 !default;
$grid-gutter-width-base: 30px !default;
$grid-gutter-widths: (
    xs: $grid-gutter-width-base,
    sm: $grid-gutter-width-base,
    md: $grid-gutter-width-base,
    lg: $grid-gutter-width-base,
    xl: $grid-gutter-width-base,
) !default;

// Typography
//
// Font, line-height, and color for body text, headings, and more.

// Pixel value used to responsively scale all typography. Applied to the `<html>` element.
$font-family-app: 'Verdana', sans-serif !default;
$font-family-heading: 'Helvetica', sans-serif !default;
$font-family-body: 'Arial', sans-serif !default;
$font-family-icons: 'Material Icons', sans-serif !default;

$font-size-root: 16px !default;

$font-size-base: 1rem !default;
$font-size-xl: 1.1rem !default;
$font-size-sm: 0.9rem !default;
$font-size-xs: 0.8rem !default;

$font-size-h1: 2.5em !default;
$font-size-h2: 2em !default;
$font-size-h3: 1.75em !default;
$font-size-h4: 1.5em !default;
$font-size-h5: 1.25em !default;
$font-size-h6: 1em !default;

$line-height: 1.5 !default;

// Z-index master list
//
// Warning: Avoid customizing these values. They`re used for a bird`s eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-progress-bar: 101 !default;
$zindex-popup: 95 !default;
$zindex-nav-bar: 100 !default;
$zindex-header: 100 !default;
$zindex-header-open: 105 !default;
$zindex-fullscreen: 100 !default;
$zindex-footer: 105 !default;
$zindex-dialog-container: 107 !default;
$zindex-footer-static: 110 !default;
$zindex-dialog: 115 !default;
$zindex-viewer: 120 !default;
$zindex-confirm: 125 !default;
$zindex-left-menu: 130 !default;
$zindex-flash: 140 !default;
$zindex-loader: 150 !default;

// Flash defaults

$success-bright: colors.$green-bright !default;
$success: colors.$green !default;
$success-dark: colors.$green-dark !default;
$success-text: colors.$white !default;

$info-bright: colors.$blue-bright !default;
$info: colors.$blue !default;
$info-dark: colors.$blue-dark !default;
$info-text: colors.$white !default;

$warning-bright: colors.$amber-bright !default;
$warning: colors.$amber !default;
$warning-dark: colors.$amber-dark !default;
$warning-text: colors.$white !default;

$error-bright: colors.$red-bright !default;
$error: colors.$red !default;
$error-dark: colors.$red-dark !default;
$error-text: colors.$white !default;

// Form field defaults

$label-default-light: colors.$deep-grey !default; // 7
$label-disabled-light: colors.$light-grey-dark !default; // 5

$label-default-dark: colors.$light-grey-dark !default; // 5
$label-disabled-dark: colors.$deep-grey !default; // 7

$input-default-light: colors.$light-grey-dark !default; // 5
$input-disabled-light: colors.$light-grey !default; // 4

$input-default-dark: colors.$deep-grey !default; // 7
$input-disabled-dark: colors.$deep-grey-dark !default; // 8

$content-default-light: colors.$black !default; // 10
$content-disabled-light: colors.$deep-grey-bright !default; // 6

$content-default-dark: colors.$white !default; // 1
$content-disabled-dark: colors.$light-grey-dark !default; // 5

$checkbox-default-light: colors.$deep-grey-bright !default; // 6
$checkbox-disabled-light: colors.$light-grey !default; // 4

$checkbox-default-dark: colors.$light-grey !default; // 4
$checkbox-disabled-dark: colors.$deep-grey !default; // 7

$primary-default-light: colors.$primary !default;
$primary-disabled-light: colors.$light-grey-dark !default; // 5

$primary-default-dark: colors.$primary-bright !default;
$primary-disabled-dark: colors.$deep-grey !default; // 7

$accent-default-light: colors.$accent !default;
$accent-disabled-light: colors.$light-grey-dark !default; // 5

$accent-default-dark: colors.$accent-bright !default;
$accent-disabled-dark: colors.$deep-grey !default; // 7

$error-default-light: colors.$red !default;
$error-disabled-light: colors.$red-dark !default;

$error-default-dark: colors.$red-bright !default;
$error-disabled-dark: colors.$red-dark !default;
