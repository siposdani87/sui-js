// Variables

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;

    @each $key, $num in $map {
        @if $prev-num == null {
            // Do nothing
        } @else if not comparable($prev-num, $num) {
            @warn 'Potentially invalid value for #{$map-name}: This map must be in ascending order, but key `#{$key}` has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key `#{$prev-key}` !';
        } @else if $prev-num >= $num {
            @warn 'Invalid value for #{$map-name}: This map must be in ascending order, but key `#{$key}` has value #{$num} which isn`t greater than #{$prev-num}, the value of the previous key `#{$prev-key}` !';
        }

        $prev-key: $key;
        $prev-num: $num;
    }
}

// Replace `$search` with `$replace` in `$string`
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace +
            str-replace(
                str-slice($string, $index + str-length($search)),
                $search,
                $replace
            );
    }

    @return $string;
}

@mixin _assert-starts-at-zero($map) {
    $values: map-values($map);
    $first-value: nth($values, 1);

    @if $first-value != 0 {
        @warn 'First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.';
    }
}

// Options
//
// Quickly modify global styling by enabling or disabling optional settings.

$enable-rounded: true;
$enable-shadows: true;
//$enable-gradients: false;
//$enable-transitions: true;
//$enable-hover-media-query: false;
$enable-grid-classes: true;
//$enable-print-styles: true;

// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem;
$spacer-x: $spacer;
$spacer-y: $spacer;
$spacers: (
    0: (
        x: 0,
        y: 0,
    ),
    1: (
        x: (
            $spacer-x * 0.25,
        ),
        y: (
            $spacer-y * 0.25,
        ),
    ),
    2: (
        x: (
            $spacer-x * 0.5,
        ),
        y: (
            $spacer-y * 0.5,
        ),
    ),
    3: (
        x: $spacer-x,
        y: $spacer-y,
    ),
    4: (
        x: (
            $spacer-x * 1.5,
        ),
        y: (
            $spacer-y * 1.5,
        ),
    ),
    5: (
        x: (
            $spacer-x * 3,
        ),
        y: (
            $spacer-y * 3,
        ),
    ),
);
$border-width: 1px;

// Body
//
// Settings for the `<body>` element.

$body-bg: $white;
$body-color: $light-grey;

// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
);
@include _assert-ascending($grid-breakpoints, '$grid-breakpoints');
@include _assert-starts-at-zero($grid-breakpoints);

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
    sm: 540px,
    md: 720px,
    lg: 960px,
    xl: 1140px,
);
@include _assert-ascending($container-max-widths, '$container-max-widths');

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns: 12;
$grid-gutter-width-base: 30px;
$grid-gutter-widths: (
    xs: $grid-gutter-width-base,
    sm: $grid-gutter-width-base,
    md: $grid-gutter-width-base,
    lg: $grid-gutter-width-base,
    xl: $grid-gutter-width-base,
);

// Typography
//
// Font, line-height, and color for body text, headings, and more.

// Pixel value used to responsively scale all typography. Applied to the `<html>` element.
$font-family-app: 'Verdana', sans-serif;
$font-family-heading: 'Helvetica', sans-serif;
$font-family-body: 'Arial', sans-serif;

$font-size-root: 16px;

$font-size-base: 1rem;
$font-size-xl: 1.1rem;
$font-size-sm: 0.9rem;
$font-size-xs: 0.8rem;

$font-size-h1: 2.5em;
$font-size-h2: 2em;
$font-size-h3: 1.75em;
$font-size-h4: 1.5em;
$font-size-h5: 1.25em;
$font-size-h6: 1em;

$line-height: 1.5;

// Components
//
// Define common padding and border radius sizes and more.

$border-radius: 0.25rem;
$border-radius-lg: 0.3rem;
$border-radius-sm: 0.2rem;

// Z-index master list
//
// Warning: Avoid customizing these values. They`re used for a bird`s eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-progress-bar: 101;
$zindex-popup: 95;
$zindex-nav-bar: 100;
$zindex-header: 100;
$zindex-header-open: 105;
$zindex-fullscreen: 100;
$zindex-footer: 105;
$zindex-dialog-container: 107;
$zindex-footer-static: 110;
$zindex-dialog: 115;
$zindex-viewer: 120;
$zindex-confirm: 125;
$zindex-left-menu: 130;
$zindex-flash: 140;
$zindex-loader: 150;
$zindex-sidebar: 125;

// Image thumbnails

$thumbnail-padding: 0.25rem;
$thumbnail-bg: $body-bg;
$thumbnail-border-width: $border-width;
$thumbnail-border-color: #ddd;
$thumbnail-border-radius: $border-radius;

// Flash defaults

$success-bright: $green-bright;
$success: $green;
$success-dark: $green-dark;
$success-text: $white;

$info-bright: $blue-bright;
$info: $blue;
$info-dark: $blue-dark;
$info-text: $white;

$warning-bright: $amber-bright;
$warning: $amber;
$warning-dark: $amber-dark;
$warning-text: $white;

$error-bright: $red-bright;
$error: $red;
$error-dark: $red-dark;
$error-text: $white;

// Form field defaults

$label-default-light: $deep-grey; // 7
$label-disabled-light: $light-grey-dark; // 5

$label-default-dark: $light-grey-dark; // 5
$label-disabled-dark: $deep-grey; // 7

$input-default-light: $light-grey-dark; // 5
$input-disabled-light: $light-grey; // 4

$input-default-dark: $deep-grey; // 7
$input-disabled-dark: $deep-grey-dark; // 8

$content-default-light: $black; // 10
$content-disabled-light: $deep-grey-bright; // 6

$content-default-dark: $white; // 1
$content-disabled-dark: $light-grey-dark; // 5

$checkbox-default-light: $deep-grey-bright; // 6
$checkbox-disabled-light: $light-grey; // 4

$checkbox-default-dark: $light-grey; // 4
$checkbox-disabled-dark: $deep-grey; // 7

$primary-default-light: $primary;
$primary-disabled-light: $light-grey-dark; // 5

$primary-default-dark: $primary-bright;
$primary-disabled-dark: $deep-grey; // 7

$accent-default-light: $accent;
$accent-disabled-light: $light-grey-dark; // 5

$accent-default-dark: $accent-bright;
$accent-disabled-dark: $deep-grey; // 7

$error-default-light: $red;
$error-disabled-light: $red-dark;

$error-default-dark: $red-bright;
$error-disabled-dark: $red-dark;
